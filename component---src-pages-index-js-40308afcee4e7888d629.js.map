{"version":3,"file":"component---src-pages-index-js-40308afcee4e7888d629.js","mappings":";8GAAA,OAOC,WACA,aAEA,IAAIA,EAAS,CAAC,EAAEC,eAGhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,EAEf,OACM,GAAgB,WAAZJ,EAAsB,CAChC,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,WAAaP,EAAIO,SAASA,WAAWG,SAAS,iBAAkB,CACrGd,EAAQM,KAAKF,EAAIO,YACjB,QACD,CAEA,IAAK,IAAII,KAAOX,EACXP,EAAOmB,KAAKZ,EAAKW,IAAQX,EAAIW,IAChCf,EAAQM,KAAKS,EAGhB,CAxBkB,CAyBnB,CAEA,OAAOf,EAAQiB,KAAK,IACrB,CAEqCC,EAAOC,SAC3CpB,EAAWqB,QAAUrB,EACrBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIH,CApDA,iJCHA,MAAMsB,EAAY,CAMhBC,KAAM,WAENC,QAAS,SACTC,GAAI,iBAEAC,EAAwB,cAE9B,EACED,GAAIE,EAAY,MAChBC,YACAL,OAAO,QACPC,WAAU,KACPK,GACFC,KAAqB,SAAKH,EAAW,IACnCE,EACHC,IAAKA,EACLF,UAAW,IAAWA,EAAW,GAAGL,KAAQC,EAAU,UAAY,kBAEpEE,EAASK,YAAc,WACvBL,EAASJ,UAAYA,EACrB,QCvBA,MADiC,gBAAoB,CAAC,GCD/C,MAAMU,EAAsB,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAE7DC,EAA4B,gBAAoB,CACpDC,SAAU,CAAC,EACXC,YAAaH,EACbI,cAJoC,QAMhC,SACJC,EAAQ,SACRC,GACEL,EAqBG,SAASM,EAAmBC,EAAQC,GACzC,MAAM,SACJP,IACE,IAAAQ,YAAWT,GACf,OAAOO,GAAUN,EAASO,IAAkBA,CAC9C,CCjCA,MAAME,EAA8B,cAAiB,EACnDC,KACAC,WACAjB,YACAL,OAAO,WACPuB,WAAU,EACVC,aAAY,EAEZtB,GAAIE,EAAY,WACbE,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GAEf,OADAG,EAAWN,EAAmBM,EAAU,qBACpB,SAAKlB,EAAW,IAC/BE,EACHC,IAAKA,EACLP,KAAMA,EACNqB,GAAIA,GAAMI,EACVpB,UAAW,IAAWA,EAAWiB,EAAUC,GAAW,WAAYC,GAAa,eAC/E,IAEJJ,EAAeZ,YAAc,iBAC7B,QCxBA,MAAMkB,EAA8B,cAAiB,EACnDJ,WACAjB,YACAsB,aACGrB,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GAEf,OADAG,EAAWN,EAAmBM,EAAU,qBACpB,SAAK,QAAS,IAC7BhB,EACHC,IAAKA,EACLoB,QAASA,GAAWF,EACpBpB,UAAW,IAAWA,EAAWiB,IACjC,IAEJI,EAAelB,YAAc,iBAC7B,QCZA,MAAMoB,EAAyB,cAAiB,EAC9CP,KACAC,WACAO,iBACAC,UAAS,EACTC,WAAU,EACVC,YAAW,EACXT,WAAU,EACVC,aAAY,EACZS,mBAAkB,EAClBC,WACAC,eACA9B,YACA+B,QACAC,QAAQ,GACRrC,OAAO,WACPsC,QACAC,WAEArC,KAAK,WACFI,GACFC,KACDe,EAAWN,EAAmBM,EAAU,cACxCO,EAAiBb,EAAmBa,EAAgB,eACpD,MAAM,UACJJ,IACE,IAAAN,YAAW,GACTqB,GAAmB,IAAAC,UAAQ,KAAM,CACrChB,UAAWJ,GAAMI,KACf,CAACA,EAAWJ,IACVqB,GAAYH,GAAqB,MAATD,IAA2B,IAAVA,GCZjD,SAAwBC,EAAUvC,GAChC,OAAO,WAAe2C,QAAQJ,GAAUK,MAAKC,GAAsB,iBAAqBA,IAAUA,EAAM7C,OAASA,GACnH,CDUoE8C,CAAeP,EAAU,GACrFQ,GAAqB,SAAK,EAAgB,IAC3CzC,EACHN,KAAe,WAATA,EAAoB,WAAaA,EACvCO,IAAKA,EACLgB,QAASA,EACTC,UAAWA,EACXQ,SAAUA,EACV9B,GAAIA,IAEN,OAAoB,SAAK,EAAYa,SAAU,CAC7CiC,MAAOR,EACPD,UAAuB,SAAK,MAAO,CACjCH,MAAOA,EACP/B,UAAW,IAAWA,EAAWqC,GAAYpB,EAAUQ,GAAU,GAAGR,WAAmBS,GAAW,GAAGT,YAA6B,WAATtB,GAAqB6B,GAC9IU,SAAUA,IAAyB,UAAM,WAAW,CAClDA,SAAU,CAACQ,EAAOL,IAAyB,SAAK,EAAgB,CAC9DL,MAAOA,EACPE,SAAUD,IACRJ,IAAyB,SAAK,EAAU,CAC1ClC,KAAMmC,EACNlC,QAASgC,EACTM,SAAUL,UAIhB,IAEJN,EAAUpB,YAAc,YACxB,MAAelB,OAAO2D,OAAOrB,EAAW,CACtCsB,MAAO,EACPC,MAAO,YEjET,MAAMC,EAA2B,cAAiB,EAChD9B,WACAtB,OACAqD,OACAC,WACAjC,KACAhB,YACAkB,WAAU,EACVC,aAAY,EACZ+B,YACAC,WAEAtD,GAAIE,EAAY,WACbE,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GAGf,OAFAG,EAAWN,EAAmBM,EAAU,iBAEpB,SAAKlB,EAAW,IAC/BE,EACHN,KAAMA,EACNqD,KAAMC,EACN/C,IAAKA,EACLiD,SAAUA,EACVnC,GAAIA,GAAMI,EACVpB,UAAW,IAAWA,EAAWkD,EAAY,GAAGjC,cAAuBA,EAAU+B,GAAQ,GAAG/B,KAAY+B,IAAiB,UAATrD,GAAoB,GAAGsB,UAAkBC,GAAW,WAAYC,GAAa,eAC7L,IAEJ4B,EAAY5C,YAAc,cAC1B,MAAelB,OAAO2D,OAAOG,EAAa,CACxCjD,SAAQ,ICpCV,MAAMsD,EAA4B,cAAiB,EACjDpD,YACAiB,WACApB,GAAIE,EAAY,SACbE,GACFC,KACDe,EAAWN,EAAmBM,EAAU,kBACpB,SAAKlB,EAAW,CAClCG,IAAKA,EACLF,UAAW,IAAWA,EAAWiB,MAC9BhB,OAGPmD,EAAajD,YAAc,eAC3B,QChBA,MAAMkD,EAAyB,cAAiB,EAC9CjC,YAEAvB,GAAIE,EAAY,SACbE,GACFC,KACD,MAAMoD,GAAU,IAAAlB,UAAQ,KAAM,CAC5BhB,eACE,CAACA,IACL,OAAoB,SAAK,EAAYV,SAAU,CAC7CiC,MAAOW,EACPpB,UAAuB,SAAKnC,EAAW,IAClCE,EACHC,IAAKA,KAEP,IAEJmD,EAAUlD,YAAc,YACxB,QChBO,SAASoD,GAAO,GACrB1D,EAAE,SACFoB,EAAQ,UACRjB,KACGC,IAEHgB,EAAWN,EAAmBM,EAAU,OACxC,MAAMV,ER6BD,WACL,MAAM,YACJA,IACE,IAAAO,YAAWT,GACf,OAAOE,CACT,CQlCsBiD,GACdhD,ERkCD,WACL,MAAM,cACJA,IACE,IAAAM,YAAWT,GACf,OAAOG,CACT,CQvCwBiD,GAChBC,EAAQ,GACRrF,EAAU,GAqBhB,OApBAkC,EAAYoD,SAAQC,IAClB,MAAMC,EAAY5D,EAAM2D,GAExB,IAAIE,EACAC,EACAC,SAHG/D,EAAM2D,GAIY,iBAAdC,GAAuC,MAAbA,IAEjCC,OACAC,SACAC,SACEH,GAEJC,EAAOD,EAET,MAAMI,EAAQL,IAAapD,EAAgB,IAAIoD,IAAa,GACxDE,GAAMJ,EAAM/E,MAAc,IAATmF,EAAgB,GAAG7C,IAAWgD,IAAU,GAAGhD,IAAWgD,KAASH,KACvE,MAATE,GAAe3F,EAAQM,KAAK,QAAQsF,KAASD,KACnC,MAAVD,GAAgB1F,EAAQM,KAAK,SAASsF,KAASF,IAAS,IAEvD,CAAC,IACH9D,EACHD,UAAW,IAAWA,KAAc0D,KAAUrF,IAC7C,CACDwB,KACAoB,WACAyC,SAEJ,CACA,MAAMQ,EAAmB,cAEzB,CAACjE,EAAOC,KACN,OAAO,UACLF,KACGmE,IAEHtE,GAAIE,EAAY,MAAK,SACrBkB,EAAQ,MACRyC,IACGH,EAAOtD,GACZ,OAAoB,SAAKF,EAAW,IAC/BoE,EACHjE,IAAKA,EACLF,UAAW,IAAWA,GAAY0D,EAAMlF,QAAUyC,IAClD,IAEJiD,EAAI/D,YAAc,MAClB,QCtDA,MAAMiE,EAAyB,cAAiB,EAE9CvE,GAAIE,EAAY,QAChBkB,WACAoD,UAAS,EACTC,kBAAiB,EACjBtE,YACAsB,aACGrB,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GACfG,EAAWN,EAAmBM,EAAU,cACxC,IAAIsD,EAAc,iBACI,iBAAXF,IAAqBE,EAAc,GAAGA,KAAeA,KAAeF,KAC/E,MAAMhG,EAAU,IAAW2B,EAAWiB,EAAUqD,GAAkB,kBAAmBD,GAAUE,GAG/F,OADAjD,EAAUA,GAAWF,EACjBiD,GAA4B,SAAK,EAAK,CACxCnE,IAAKA,EACLL,GAAI,QACJG,UAAW3B,EACXiD,QAASA,KACNrB,KAKH,SAAKF,EAAW,CACdG,IAAKA,EACLF,UAAW3B,EACXiD,QAASA,KACNrB,GAEN,IAEHmE,EAAUjE,YAAc,YACxB,QCxCA,MAAMqE,EAAyB,cAAiB,EAC9CvD,WACAjB,YACAgB,QACGf,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GAEf,OADAG,EAAWN,EAAmBM,EAAU,eACpB,SAAK,QAAS,IAC7BhB,EACHN,KAAM,QACNO,IAAKA,EACLF,UAAW,IAAWA,EAAWiB,GACjCD,GAAIA,GAAMI,GACV,IAEJoD,EAAUrE,YAAc,YACxB,QCnBA,MAAMsE,EAA0B,cAAiB,EAC/CxD,WACA+B,OACAC,WACAjD,YACAkB,WAAU,EACVC,aAAY,EACZH,QACGf,GACFC,KACD,MAAM,UACJkB,IACE,IAAAN,YAAW,GAEf,OADAG,EAAWN,EAAmBM,EAAU,gBACpB,SAAK,SAAU,IAC9BhB,EACH+C,KAAMC,EACN/C,IAAKA,EACLF,UAAW,IAAWA,EAAWiB,EAAU+B,GAAQ,GAAG/B,KAAY+B,IAAQ9B,GAAW,WAAYC,GAAa,cAC9GH,GAAIA,GAAMI,GACV,IAEJqD,EAAWtE,YAAc,aACzB,QCzBA,MAAMuE,EAAwB,cAE9B,EACEzD,WACAjB,YACAH,GAAIE,EAAY,QAChB4E,WACG1E,GACFC,KACDe,EAAWN,EAAmBM,EAAU,cACpB,SAAKlB,EAAW,IAC/BE,EACHC,IAAKA,EACLF,UAAW,IAAWA,EAAWiB,EAAU0D,GAAS,mBAGxDD,EAASvE,YAAc,WACvB,QCpBA,MAAMyE,EAAsB,cAAiB,CAAC3E,EAAOC,KAAqB,SAAK,EAAW,IACrFD,EACHC,IAAKA,EACLP,KAAM,aAERiF,EAAOzE,YAAc,SACrB,MAAelB,OAAO2D,OAAOgC,EAAQ,CACnC/B,MAAO,EAAUA,MACjBC,MAAO,EAAUA,QCHnB,MAAM+B,EAA6B,cAAiB,EAClD5D,WACAjB,YACAkC,WACAd,YACAa,WACGhC,GACFC,KACDe,EAAWN,EAAmBM,EAAU,kBACpB,UAAM,EAAW,CACnCf,IAAKA,EACLF,UAAW,IAAWA,EAAWiB,GACjCG,UAAWA,KACRnB,EACHiC,SAAU,CAACA,GAAuB,SAAK,QAAS,CAC9CZ,QAASF,EACTc,SAAUD,UAIhB4C,EAAc1E,YAAc,gBAC5B,QCfA,MAAM,EAAY,CAShB2E,KAAM,QAKNC,UAAW,SACXlF,GAAI,iBAEAmF,EAAoB,cAAiB,EACzChF,YACA+E,YAEAlF,GAAIE,EAAY,UACbE,GACFC,KAAqB,SAAKH,EAAW,IACnCE,EACHC,IAAKA,EACLF,UAAW,IAAWA,EAAW+E,GAAa,qBAEhDC,EAAK7E,YAAc,OACnB6E,EAAKtF,UAAY,EACjB,MAAeT,OAAO2D,OAAOoC,EAAM,CACjCC,MAAO,EACPC,QAAS,EACTC,SAAU,EACVC,MAAO,EACPR,OAAM,EACN9B,MAAO,EACPuC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRV,cAAa,ICCf,MAjDkB,IAAa,IAAZ,KAACW,GAAK,EAEvB,MAAMC,EAAQD,EAAKE,wBAAwBC,MAAMC,QAAOC,GAA2B,IAAnBA,EAAKC,KAAKnG,OACpEoG,EAAOP,EAAKE,wBAAwBC,MAAMC,QAAOC,GAA2B,IAAnBA,EAAKC,KAAKnG,QAEnE,EAACqG,EAAU,EAACC,IAAcC,EAAAA,EAAAA,WAAS,GACnCC,EAAiBH,EAAYD,EAAON,EAE1C,OACE,uBAAKzF,UAAU,kBACX,0BAAI,iBACJ,gBAAC,EAAI,KACH,gBAAC,EAAKoF,MAAK,CACTzF,KAAK,SACLqB,GAAG,gBACHiB,MAAO+D,EAAY,QAAU,QAC7BI,SAAU,IAAMH,GAAYD,MAIhC,uBAAKhG,UAAU,QAEXmG,EAAeE,KAAI,CAACC,EAAMC,IACxB,uBAAKnH,IAAKmH,EAAOvG,UAAU,kCACzB,0BAAQA,UAAU,sBAAsBwG,QAAS,IAAMC,UAAUC,UAAUC,UAAUL,EAAKR,KAAKc,OAC5FN,EAAKR,KAAK9D,WAMnB,iCCrBV,IAEI6E,EAAU,WAAY,EA2C1BtH,EAAOC,QAAUqH","sources":["webpack://merukari-clipboard/./node_modules/classnames/index.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/Feedback.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormContext.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/ThemeProvider.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormControl.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/Col.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormRange.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FormText.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/Switch.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://merukari-clipboard/./node_modules/react-bootstrap/esm/Form.js","webpack://merukari-clipboard/./src/pages/index.js","webpack://merukari-clipboard/./node_modules/warning/warning.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React, { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport { graphql } from \"gatsby\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nconst IndexPage = ({data}) => {\n\n  const sells = data.allMerukariSentenceJson.edges.filter(edge => edge.node.type === 0);\n  const buys = data.allMerukariSentenceJson.edges.filter(edge => edge.node.type === 1);\n  \n  const [isBuyMode, setBuyMode] = useState(false);\n  const itemsToDisplay = isBuyMode ? buys : sells;\n\n  return (\n    <div className=\"container mt-5\">\n        <h1>メルカリテンプレートコピー</h1>\n        <Form>\n          <Form.Check\n            type=\"switch\"\n            id=\"custom-switch\"\n            label={isBuyMode ? \"購入モード\" : \"販売モード\"}\n            onChange={() => setBuyMode(!isBuyMode)}\n          />\n        </Form>\n        \n        <div className=\"mt-4\">\n          {\n            itemsToDisplay.map((item, index) => (\n              <div key={index} className=\"d-flex align-items-center mb-2\">\n                <button className=\"btn btn-primary m-2\" onClick={() => navigator.clipboard.writeText(item.node.text)}>\n                  {item.node.title}\n                </button>\n              </div>\n            ))\n          }\n        </div>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMerukariSentenceJson {\n      edges {\n        node {\n          id\n          title\n          text\n          type\n        }\n      }\n    }\n  }\n`\nexport default IndexPage;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","propTypes","type","tooltip","as","Feedback","Component","className","props","ref","displayName","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","value","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","useCol","useBootstrapBreakpoints","useBootstrapMinBreakpoint","spans","forEach","brkPoint","propValue","span","offset","order","infix","Col","colProps","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","Check","Text","Range","Select","data","sells","allMerukariSentenceJson","edges","filter","edge","node","buys","isBuyMode","setBuyMode","useState","itemsToDisplay","onChange","map","item","index","onClick","navigator","clipboard","writeText","text","warning"],"sourceRoot":""}